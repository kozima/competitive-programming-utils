バグがとれないときに見るリスト

- 変数名の typo
  - グリッド上での探索とかで同じような処理が並んでるときにありがち
    - x1, y1, x2, y2 みたいなの
    - u, d, r, l とかも
  - 特に前の行をコピーして編集したら直し忘れがあったり
- ループの反復ごとにクリアされるべき accumulator がループの外で宣言されている、あるいはその逆。
- 整数のかけ算オーバーフロー
- mod 1000000007 で答える問題で mod とり忘れたまま出力
  - mod とり忘れてかけ算してオーバーフローも確認
  - 途中で引き算する場合、答えが負になりうることを忘れてるケースもある
- int に収まらない入力を int で読み込む
- 文字列を char[] で持つときに null 文字の分を確保し忘れ
  - そもそも強い理由がない限り std::string を使おう
- 埋め込んでいる定数は正しいか？
  - N の上限は 1e5 か 2e5 か、その他問題に固有の定数は正しい値になっているか？
  - N <= 200000 なのに doubling のテーブルサイズが t[17][n] とかになってないか（18 必要）
- float と int の変換
  - int への cast の丸め方向は実装依存なので round, floor, ceiling を使う
  - double の有効数字は 15 桁なので long long より少ない
- int の割り算の丸め方向は 0 に近い方なので負のときは切り上げになる
- ans = 1<<30 などとしてループして最小値を求める場合に最小値が 1<<30 より大きい可能性はないか？
- 短絡評価で呼び出すべき関数が呼び出されていないことはないか？
  e.g. ret = ret && dfs(j) 
       二部グラフ判定で奇数長の閉路を見つけたら false が返るとき、
       ret が一度 false になるとそれ以降 dfs は呼ばれない
- n, m みたいに変数が二つあるときの取り違え
  - ループ範囲が 0..m なのに 0..n にするとか
  - 配列サイズが m なのに A[n] と宣言するとか
- 重複があるかもしれないものを set で管理していないか
